{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","setContact","onChange","e","target","value","required","selected","map","element","index","name","AppointmentForm","title","setTitle","contact","date","setDate","time","setTime","handleSubmit","onSubmit","type","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","text","Tile","object","values","Object","className","TileList","array","AppointmentsPage","appointments","addAppointment","useState","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","setDuplicate","useEffect","names","forEach","push","includes","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55be36da.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, setContact}) => {\r\n  return (\r\n    <select onChange={(e)=>{setContact(e.target.value)}} required>\r\n      <option value='no one' key='default' selected='selected'>----</option>\r\n      {contacts.map((element, index) =>{\r\n        return <option value={element.name} key='index'>{element.name}</option>\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({contacts,title,setTitle,contact,setContact,date,setDate,time,setTime,handleSubmit}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Title</label>\r\n        <input type='text' value={title} onChange={(e) =>{setTitle(e.target.value)}} required />\r\n      <label>Contact</label>\r\n        <ContactPicker contacts={contacts} setContact={setContact} />\r\n      <label>Date</label>\r\n        <input type='date' value={date} min={getTodayString()} onChange={(e) =>{setDate(e.target.value)}} required />\r\n      <label>Time</label>\r\n        <input type='time' value={time} onChange={(e) =>{setTime(e.target.value)}} required />\r\n        <input type='submit' text='Create Appointment'/>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({object}) => {\r\n  let values = Object.values(object);\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {values.map((element, index) =>{\r\n         return <p className={index === 0 ? 'tile-title' : 'tile'} key={index}>{element}</p>\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from \"../tile/Tile.js\";\r\n\r\nexport const TileList = ({array}) => {\r\n  return (\r\n    <div>\r\n      {array.map((element, index) =>{\r\n        return <Tile object={element} key={index} />\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({contacts, appointments, addAppointment}) => {\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n   addAppointment(title, contact, date, time);\r\n   setTitle('');\r\n   setContact('');\r\n   setDate('');\r\n   setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n        contacts={contacts}\r\n        title={title}\r\n        setTitle={setTitle}\r\n        contact={contact}\r\n        setContact={setContact}\r\n        date={date}\r\n        setDate={setDate}\r\n        time={time}\r\n        setTime={setTime}\r\n        handleSubmit={handleSubmit}/>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList array={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({name, setName, phone, setPhone, email, setEmail, handleSubmit}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Contact's Name</label>\r\n        <input type='text' value={name} onChange={(e) =>{setName(e.target.value)}} required />\r\n      <label>Contact's Phone Number</label>\r\n        <input type='tel' value={phone} onChange={(e) =>{setPhone(e.target.value)}} required pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\" />\r\n      <label>Contact's Email</label>\r\n      <input type='email' value={email} onChange={(e) =>{setEmail(e.target.value)}} required />\r\n      <input type='submit' text=\"Add Contact\" />\r\n    </form>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {ContactForm} from \"../../components/contactForm/ContactForm.js\";\r\nimport {TileList} from \"../../components/tileList/TileList.js\";\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n const [name, setName] = useState('');\r\n const [phone, setPhone] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [isDuplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addContact(name, phone, email);\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n  \r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  useEffect(()=> {\r\n    if(!contacts){\r\n      return;\r\n    }\r\n    let names = [];\r\n    contacts.forEach(contact => names.push(contact.name));\r\n    setDuplicate(names.includes(name));\r\n   }, [name]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm\r\n        name={name}\r\n        setName={setName}\r\n        phone={phone}\r\n        setPhone={setPhone}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList array={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const addContact = (name, phone, email) =>{\r\n    if(!name || !phone || !email){\r\n      return;\r\n    }\r\n    setContacts(prevState =>{\r\n      return [...prevState, {name: name, phone: phone, email: email}]\r\n    });\r\n  }\r\n\r\n  const addAppointment = (title, contact, date, time) =>{\r\n    if(!title || !contact || !date || !time){\r\n      return;\r\n    }\r\n\r\n    setAppointments(prevState =>{\r\n      return [...prevState, {title: title, contact: contact, date: date, time: time}];\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage contacts={contacts} appointments={appointments} addAppointment={addAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}